# baseURI: http://promsns.org/def/lic
# imports: http://promsns.org/def/agr
# imports: http://schema.theodi.org/odrs/index.ttl
# imports: http://www.w3.org/ns/prov-o

@prefix : <http://promsns.org/def/lic#> .
@prefix agr: <http://promsns.org/def/agr#> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://promsns.org/def/lic>
  rdf:type owl:Ontology ;
  dc:creator "Nicholas Car" ;
  dcterms:created "2016-09-18"^^xsd:date ;
  dcterms:creator <http://promsns.org/id/person/nicholascar> ;
  dcterms:modified "2016-10-16"^^xsd:date ;
  rdfs:comment """This ontology specialises the Agreements Ontology (http://promsnns.org/def/agr) to specifically address the needs of data licensing. It borrows heavily from the Creative Commons Rights Expression Language (http://labs.creativecommons.org/demos/ns/) and the Open Data Initiative's Open Data Rights Statement Vocabulary (http://schema.theodi.org/odrs/) but hopes to be far more useful for machine-reading applications such as smart repositories that can autonomously calculate when and how to provide access to datasets based on licensing conditions.

This ontology follows the pattern set in the Agreements ontology by defining a license as a collection of requirements for action ob behalf of parties wishing to access or use data. A requirement could be to reference the creator of the dataset in derived data (attribution) or not to use data for commercial purposes. This promotion of individual 'requirements' to first-class objects allows very many licenses to be assembled from a small set of requirements which alows reasonably easy to use and yet somewhat customisable licenses to be created which may be better or more practical than either just restricting data access or mandating the use of standard licenses such as Creative Commons Attribution 4.0; two extreem positions."""@en ;
  rdfs:label "Licenses ontology"@en ;
  owl:imports <http://promsns.org/def/agr> ;
  owl:imports <http://schema.theodi.org/odrs/index.ttl> ;
  owl:imports <http://www.w3.org/ns/prov-o> ;
  owl:versionInfo "v1.0" ;
.

:License
  rdf:type owl:Class ;
  rdfs:comment """This license class represents a license object such as that which is applied to intellectual works and specifies the conditions of their use. It is identical in concept to the License class presented by the Creative Commons Rights Expression Language class and the Open Data Rights Statement Vocabulary's License class that is derived from the CC class but it is different in construction. This license class is a entirely a collection of individual  requirements (agr:Requirements) and contains no instruction itself. For this reason it is modelled as a skos:Collection, not a skos:Concept.

Note that this License class is a trivial subclass of the Agreements ontology's Agreement class. The only things changed for this subclass are the names of the class and this descriptive text as an Agreement class object is also a skos:Collection of Requirements. This means a license is really just an agreement with a particular set of Requirements and applicable to a particular set of Agents (perhaps the generators and future users of data) and that there is nothing inherently different about a license or nothing about an Agreement which is not applicable to a License.

The American spelling is used where license with an 's' is the same for both license noun and verb as opposed to the Australian spelling which uses a 'c' for the noun."""@en ;
  rdfs:label "license"@en ;
  rdfs:subClassOf agr:Agreement ;
  skos:altLabel "licence"@en ;
.

:licenseIssuer
  rdf:type owl:ObjectProperty ;
  rdfs:comment "This property indicates who the issuer of a particular license instance is. It allows direct indication wich may be needed whe there are multiple Agents associated with an Entity and it is unclear who the issuer is."@en ;
  rdfs:domain :License ;
  rdfs:range prov:Agent ;
.
